# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.5.1-node-browsers
        environment:
          - PGHOST=localhost
          - PGUSER=ubuntu
          - RAILS_ENV=test
          - RACK_ENV=test
          - DATABASE_URL: postgres://ubuntu@localhost:5432/hello_kubernetes_test


      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/postgres:9.6.2
        environment:
          - POSTGRES_USER=ubuntu
          - POSTGRES_DB=hello_kubernetes_test
      - image: circleci/node:7.10.0-browsers


    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install ruby dependencies
          command: |
            bin/bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}


      # Database setup
      - run:
          name: set up DB
          command: |
            bin/bundle exec rake db:create
            bin/bundle exec rake db:schema:load
            bin/bundle exec rake db:seed
          environment:
            DATABASE_URL: postgres://ubuntu@localhost:5432/hello_kubernetes_test

      # rubocop
      - run:
          name: run rubocop
          command: |
            bin/bundle exec rubocop

      # run ruby tests
      - run:
          name: run tests
          command: |
            bin/bundle exec rspec

  deploy:
    machine: true
    working_directory: ~/repo
    steps:
      - checkout
      - run: export COMMIT_SHA=$(git rev-parse --verify HEAD)
      - run: echo ${GOOGLE_AUTH} > ${HOME}/gcp-key.json
      - run: sudo /opt/google-cloud-sdk/bin/gcloud --quiet components update kubectl
      - run: /opt/google-cloud-sdk/bin/gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
      - run: /opt/google-cloud-sdk/bin/gcloud container builds submit --config cloudbuild.yaml --project=$GC_PROJECT --substitutions=_GC_IMAGE=$GC_IMAGE,COMMIT_SHA=$COMMIT_SHA .
      - run: /opt/google-cloud-sdk/bin/gcloud config set project $GC_PROJECT
      - run: /opt/google-cloud-sdk/bin/gcloud config set compute/zone $GC_ZONE
      - run: /opt/google-cloud-sdk/bin/gcloud container clusters get-credentials $GC_CLUSTER
      - run: kubectl set image deployment hello-kubernetes hello-kubernetes=gcr.io/$GC_PROJECT/$GC_IMAGE:$COMMIT_SHA --record

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
