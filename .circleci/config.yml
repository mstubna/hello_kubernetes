# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.5.0-node-browsers
        environment:
          - PGHOST=localhost
          - PGUSER=ubuntu
          - RAILS_ENV=test
          - RACK_ENV=test
          - DATABASE_URL: postgres://ubuntu@localhost:5432/hello_kubernetes_test


      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/postgres:9.6.2
        environment:
          - POSTGRES_USER=ubuntu
          - POSTGRES_DB=hello_kubernetes_test
      - image: circleci/node:7.10.0-browsers


    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install ruby dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}


      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
            - v1-dependencies-

      # Database setup
      - run:
          name: set up DB
          command: |
            bundle exec rake db:create
            bundle exec rake db:schema:load
            bundle exec rake db:seed
          environment:
            DATABASE_URL: postgres://ubuntu@localhost:5432/hello_kubernetes_test

      # rubocop
      - run:
          name: run rubocop
          command: |
            bundle exec rubocop

      # run ruby tests
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results

            bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            --format progress
          environment:
            CIRCLE_ARTIFACTS: /tmp/test-results

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
